# -----------------
# BASE COMPOSE FILE
# -----------------
name: ${PROJECT_NAME}

# --- Set Up Services --- # 
services: 

  #### --------------------- #
  #### ----- UTILITIES ----- #
  #### --------------------- #
  
  # -------------------
  # CERTIFICATE RENEWER
  # ------------------- 
  cert-renewer:
    container_name: ${PROJECT_NAME}_cert-renewer 
    build: 
      context: ../setup/cert-renewer 
      dockerfile: Dockerfile
      args: 
        ALPINE_VERSION: ${PROJECT_ALPINE_VERSION}
    env_file: 
      - ../.env 
    environment: 
      PROJECT_SHELL_MODE: ${PROJECT_SHELL_MODE:-main}
      PROJECT_USER: ${PROJECT_USER}
    user: root 
    working_dir: /home/project/context
    command: tail -f /dev/null
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro 
      - ../:/home/project/context
      - ../setup/cert-renewer/crontab:/etc/crontabs/root
    networks: 
      - main
    

  #### ---------------------------- #
  #### ----- BACK-END CONTEXT ----- #
  #### ---------------------------- #

  # --------
  # BACK-END
  # -------- 
  backend: 
    container_name: ${PROJECT_FULL_NAME}_backend 
    build: 
      context: ../setup/backend/ 
      dockerfile: Dockerfile 
      target: local
      args: 
        NODE_VERSION: ${PROJECT_NODE_VERSION}
    env_file: 
      - ../.env 
    environment: 
      PROJECT_SHELL_MODE: ${PROJECT_SHELL_MODE:-main}
      PROJECT_USER: ${PROJECT_USER}
    working_dir: /home/project/source 
    command: sh /home/project/start.sh 
    user: ${PROJECT_USER}
    volumes: 
      - ../source/backend:/home/project/source 
      - ../start/backend.sh:/home/project/start.sh
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro 
    networks: 
      - main


  #### ----------------------------- #
  #### ----- FRONT-END CONTEXT ----- #
  #### ----------------------------- #

  # ---------------
  # FRONT-END (WEB)
  # ---------------
  frontend-web: 
    container_name: ${PROJECT_FULL_NAME}_frontend-web 
    build: 
      context: ../setup/frontend-web/ 
      dockerfile: Dockerfile 
      target: local
      args: 
        NODE_VERSION: ${PROJECT_NODE_VERSION}
    env_file: 
      - ../.env 
    environment: 
      PROJECT_SHELL_MODE: ${PROJECT_SHELL_MODE:-main}
      PROJECT_USER: ${PROJECT_USER}
    working_dir: /home/project/source
    command: sh /home/project/start.sh
    user: ${PROJECT_USER}
    volumes: 
      - ../source/frontend-web:/home/project/source 
      - ../start/frontend-web.sh:/home/project/start.sh 
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro 
    networks: 
      - main
   
  # ------------------
  # FRONT-END (MOBILE)
  # ------------------
  frontend-mobile: 
    container_name: ${PROJECT_FULL_NAME}_frontend-mobile 
    build: 
      context: ../setup/frontend-mobile/ 
      dockerfile: Dockerfile 
      target: local
      args: 
        NODE_VERSION: ${PROJECT_NODE_VERSION}
    env_file: 
      - ../.env 
    environment: 
      PROJECT_SHELL_MODE: ${PROJECT_SHELL_MODE:-main}
      PROJECT_USER: ${PROJECT_USER}
    working_dir: /home/project/source
    command: sh /home/project/start.sh
    user: ${PROJECT_USER}
    volumes: 
      - ../source/frontend-mobile:/home/project/source 
      - ../start/frontend-mobile.sh:/home/project/start.sh 
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro 
    networks: 
      - main

# --------
# NETWORKS
# --------
networks: 
  main: 
    driver: bridge 

# --------
# VOLUMES
# --------
volumes:  
  # --- Back-End Volumes --- # 
  backend-npm: 
    driver: local
  
  # --- Front-End Volumes --- # 
  frontend-web-npm: 
    driver: local
  frontend-mobile-npm: 
    driver: local